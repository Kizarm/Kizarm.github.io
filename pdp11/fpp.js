"use strict";const FPPsignMask=0x8000,FPPexpBias=0x80,FPPexpMask=0x7f80,FPPexpShift=7,FPPhiddenMask=0x0080,FPPfractionMask=0x007f,FPPwordCount=4,FPPwordBase=0x10000,FPPwordMask=0xffff,FPPwordBits=16;var FPP={backupPC:0,FEA:0,FEC:0,FPS:0,modeLength:0,precisionLength:FPPwordCount,result:[0,0,0,0,0,0,0],scratch:[0,0,0,0],AC:[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]};function FPP_INSTRUCTION(a,b,c){console.log("FPP "+(CPU.registerVal[7]-2).toString(8)+"   "+a.toString(8)+"  "+c+" "+FPP.precisionLength)}function incrementVirtual(virtualAddress){"use strict";return(virtualAddress&0x10000)|((virtualAddress+2)&0xffff)}function fppFlags(){"use strict";setFlags(0xf,FPP.FPS)}function fppZero(number){"use strict";var i;for(i=FPP.precisionLength-1;i>=0;i--){number[i]=0}}function fppCopy(number,operand){"use strict";var i;for(i=FPP.precisionLength-1;i>=0;i--){number[i]=operand[i]}}function fppTest(number){"use strict";FPP.FPS&=0xfff0;if(!(number[0]&FPPexpMask)){FPP.FPS|=4}if(number[0]&FPPsignMask){FPP.FPS|=8}}function fppTestInt(operand){"use strict";FPP.FPS&=0xfff0;if(operand<0)FPP.FPS|=8;if(operand==0)FPP.FPS|=4}function fppTrap(code){"use strict";FPP.FPS|=0x8000;FPP.FEC=code;FPP.FEA=(FPP.backupPC-2)&0xffff;if(!(FPP.FPS&0x4000)){CPU.trapMask|=8}return-1}function fppPack(number,numberExp,numberSign){"use strict";var condition=0;if(numberExp<=0){numberExp&=0xff;if(FPP.FPS&0x400){fppTrap(10);if(!numberExp)condition|=4}else{fppZero(number);numberSign=0;numberExp=0;condition|=4}}else{if(numberExp>=0x100){numberExp&=0xff;if(FPP.FPS&0x200){fppTrap(8);if(!numberExp)condition|=4}else{fppZero(number);numberSign=0;numberExp=0;condition|=4}condition|=2}}number[0]=numberSign|(numberExp<<FPPexpShift)|(number[0]&FPPfractionMask);if(numberSign){condition|=8}FPP.FPS=(FPP.FPS&0xfff0)|condition}function fppLDEXP(number,numberExp){"use strict";var numberSign;numberSign=number[0]&FPPsignMask;number[0]=(number[0]&FPPfractionMask)|FPPhiddenMask;if(numberExp&0x8000){numberExp=numberExp-0x10000}numberExp+=FPPexpBias;fppPack(number,numberExp,numberSign)}function fppCompare(src1,src2){"use strict";var i,result=0;FPP.FPS&=0xfff0;if((src1[0]|src2[0])&FPPexpMask){if((src1[0]^src2[0])&FPPsignMask){result=1}else{result=(src1[0]&~FPPsignMask)-(src2[0]&~FPPsignMask);if(!result){for(i=1;i<FPP.precisionLength;i++){result=src1[i]-src2[i];if(result){break}}}}}if(!result){FPP.FPS|=4}else{if(src1[0]&FPPsignMask){result=-result}if(result<0){FPP.FPS|=8}}}function fppCompareWords(number,operand){"use strict";var i,result=0;for(i=0;i<FPP.precisionLength;i++){result=number[i]-operand[i];if(result){break}}return result}function fppAddSmall(number,small){"use strict";var i,carry=small;for(i=FPP.precisionLength-1;carry&&i>=0;i--){carry+=number[i];number[i]=carry&FPPwordMask;carry>>>=FPPwordBits}return carry}function fppIncrement(number){"use strict";var numberExp,numberSign=0;numberExp=(number[0]&FPPexpMask)>>>FPPexpShift;if(!numberExp){fppZero(number)}else{numberSign=number[0]&FPPsignMask;number[0]=(number[0]&FPPfractionMask)|FPPhiddenMask}fppAddSmall(number,1);if(number[0]&0xff00){numberExp++;fppShiftRight(number,1)}return fppPack(number,numberExp,numberSign)}function fppShiftLeft(number,shift){"use strict";var i,wordIndex,bitShift,bitField=0;wordIndex=~~(shift/FPPwordBits);bitShift=FPPwordBits-(shift%FPPwordBits);if(wordIndex<FPP.precisionLength){bitField=number[wordIndex++]}for(i=0;i<FPP.precisionLength;i++){bitField<<=FPPwordBits;if(wordIndex<FPP.precisionLength){bitField|=number[wordIndex++]}number[i]=(bitField>>>bitShift)&FPPwordMask}}function fppShiftRight(number,shift){"use strict";var i,wordIndex,bitShift,bitField=0,guardBit=0;if(shift>0){wordIndex=FPP.precisionLength-~~(shift/FPPwordBits);bitShift=shift%FPPwordBits;if(bitShift==0){if(wordIndex>=0){guardBit=number[wordIndex]>>>(FPPwordBits-1)}}else{if(wordIndex>0){guardBit=number[--wordIndex]>>>(bitShift-1);bitField=guardBit>>>1}bitShift=FPPwordBits-bitShift}for(i=FPP.precisionLength-1;i>=0;i--){if(wordIndex>0){bitField|=number[--wordIndex]<<bitShift}number[i]=bitField&FPPwordMask;bitField>>>=FPPwordBits}}return guardBit&1}function fppCopyShiftLeft(number,source,shift){"use strict";var i,wordIndex,bitShift,bitField=0;wordIndex=~~(shift/FPPwordBits);bitShift=FPPwordBits-(shift%FPPwordBits);if(wordIndex<FPP.precisionLength){bitField=source[wordIndex++]}for(i=0;i<FPP.precisionLength;i++){bitField<<=FPPwordBits;if(wordIndex<FPP.precisionLength){bitField|=source[wordIndex++]}number[i]=(bitField>>>bitShift)&FPPwordMask}}function fppCopyRightShift(number,source,shift){"use strict";var i,wordIndex,bitField=0;wordIndex=~~(shift/FPPwordBits);shift=shift%FPPwordBits;for(i=0;i<FPP.precisionLength;i++){if(wordIndex<FPP.precisionLength){bitField|=source[wordIndex++]}number[i]=(bitField>>>shift)&FPPwordMask;bitField<<=FPPwordBits}}function fppCopyRightBits(number,source,shift,end){"use strict";var i,wordIndex,endShift,bitField=0;wordIndex=~~(shift/FPPwordBits);endShift=shift%FPPwordBits;end+=shift;for(i=0;i<FPP.precisionLength;i++){if(end<=0){number[i]=0}else{if(wordIndex<FPP.precisionLength){bitField|=source[wordIndex++]}end-=FPPwordBits;if(end<0){bitField&=FPPwordMask<<endShift-end}number[i]=(bitField>>>endShift)&FPPwordMask;bitField<<=FPPwordBits}}}function fppFindNormal(number,start){"use strict";var i,bit,word;bit=start%FPPwordBits;for(i=~~(start/FPPwordBits);i<FPP.precisionLength;i++){word=(number[i]<<bit)&FPPwordMask;if(word){while(!(word&0x8000)){word<<=1;bit++}return i*FPPwordBits+bit}bit=0}return-1}function fppSubtractWords(number,operand,guardBit){"use strict";var i,carry=guardBit;for(i=FPP.precisionLength-1;i>=0;i--){carry=number[i]-operand[i]-carry;number[i]=carry&FPPwordMask;carry=(carry>>>FPPwordBits)&1}}function fppAddWords(number,operand,guardBit){"use strict";var i,carry=guardBit;for(i=FPP.precisionLength-1;i>=0;i--){carry+=number[i]+operand[i];number[i]=carry&FPPwordMask;carry>>>=FPPwordBits}}function fppAdd(number,operand){"use strict";var numberExp,operandExp,numberSign,operandSign,guardBit,largerNumber,normalPoint;numberExp=(number[0]&FPPexpMask)>>>FPPexpShift;operandExp=(operand[0]&FPPexpMask)>>>FPPexpShift;if(!operandExp){if(!numberExp){fppZero(number)}fppTest(number)}else{if(!numberExp){fppCopy(number,operand);fppTest(number)}else{guardBit=0;numberSign=number[0]&FPPsignMask;operandSign=operand[0]&FPPsignMask;number[0]=(number[0]&FPPfractionMask)|FPPhiddenMask;operand[0]=(operand[0]&FPPfractionMask)|FPPhiddenMask;if(!(numberSign^operandSign)){if(numberExp!=operandExp){if(numberExp<operandExp){guardBit=fppShiftRight(number,operandExp-numberExp);numberExp=operandExp}else{guardBit=fppShiftRight(operand,numberExp-operandExp)}if(FPP.FPS&0x20){guardBit=0}}fppAddWords(number,operand,guardBit);if(number[0]&0xff00){if(!(FPP.FPS&0x20)&&(number[FPP.precisionLength-1]&0x1)){fppAddSmall(number,1)}fppShiftRight(number,1);numberExp++}}else{if(numberExp==operandExp){largerNumber=fppCompareWords(number,operand);if(!largerNumber){fppZero(number);fppTest(number);return}}else{if(numberExp<operandExp){guardBit=fppShiftRight(number,operandExp-numberExp);numberExp=operandExp;largerNumber=-1}else{guardBit=fppShiftRight(operand,numberExp-operandExp);largerNumber=1}if(FPP.FPS&0x20){guardBit=0}}if(largerNumber<0){fppSubtractWords(operand,number,guardBit);fppCopy(number,operand);numberSign=operandSign}else{fppSubtractWords(number,operand,guardBit)}if(!(number[0]&FPPhiddenMask)){normalPoint=fppFindNormal(number,9);if(normalPoint<0){numberExp=0}else{fppShiftLeft(number,normalPoint-8);numberExp-=normalPoint-8}}}fppPack(number,numberExp,numberSign)}}}function fppMultiply(number,operand){"use strict";var i,j,carry,numberExp,operandExp,numberSign;numberExp=(number[0]&FPPexpMask)>>>FPPexpShift;operandExp=(operand[0]&FPPexpMask)>>>FPPexpShift;if(!operandExp||!numberExp){fppZero(number);fppTest(number)}else{for(i=FPP.result.length-1;i>=0;i--){FPP.result[i]=0}numberSign=(number[0]^operand[0])&FPPsignMask;numberExp+=operandExp-FPPexpBias;number[0]=(number[0]&FPPfractionMask)|FPPhiddenMask;operand[0]=(operand[0]&FPPfractionMask)|FPPhiddenMask;for(i=FPP.precisionLength-1;i>=0;i--){carry=0;for(j=FPP.precisionLength-1;j>=0;j--){carry+=number[i]*operand[j]+FPP.result[i+j];FPP.result[i+j]=carry&FPPwordMask;carry=(carry>>>FPPwordBits)&FPPwordMask}if(carry){FPP.result[i+j]+=carry}}if(!(FPP.FPS&0x20)){if(FPP.result[0]&0x8000){if(FPP.result[FPP.precisionLength-1]&0x80){fppAddSmall(FPP.result,0x100)}}else{if(FPP.result[FPP.precisionLength-1]&0x40){fppAddSmall(FPP.result,0x80)}}}if(FPP.result[0]&0x8000){fppCopyRightShift(number,FPP.result,8)}else{fppCopyRightShift(number,FPP.result,7);numberExp--}fppPack(number,numberExp,numberSign)}}function fppDivide(number,operand){"use strict";var o,i,carry,divisor,qhat,numberExp,operandExp,numberSign;operandExp=(operand[0]&FPPexpMask)>>>FPPexpShift;if(!operandExp){fppTrap(4)}else{numberExp=(number[0]&FPPexpMask)>>>FPPexpShift;if(!numberExp){fppZero(number);fppTest(number)}else{numberSign=(number[0]^operand[0])&FPPsignMask;numberExp-=((operand[0]&FPPexpMask)>>>FPPexpShift)-FPPexpBias;number[0]=(number[0]&FPPfractionMask)|FPPhiddenMask;operand[0]=(operand[0]&FPPfractionMask)|FPPhiddenMask;for(i=FPP.result.length-1;i>=0;i--){FPP.result[i]=0}if(fppCompareWords(number,operand)<0){fppCopyShiftLeft(FPP.result,number,8)}else{fppCopyShiftLeft(FPP.result,number,7);numberExp++}divisor=(operand[0]*FPPwordBase+operand[1]);qhat=~~((FPP.result[0]*FPPwordBase+FPP.result[1])/divisor);for(o=0;o<FPP.precisionLength;o++){if(o){qhat=~~(((FPP.result[o-1]*FPPwordBase+FPP.result[o])*FPPwordBase+FPP.result[o+1])/divisor)}if(qhat>=FPPwordBase)qhat=FPPwordBase-1;carry=0;for(i=FPP.precisionLength-1;i>=0;i--){carry+=FPP.result[o+i]-qhat*operand[i];FPP.result[o+i]=carry&FPPwordMask;carry=~~((carry-FPP.result[o+i])/FPPwordBase)}if(carry){if((FPP.result[o-1]+=carry)!=0){qhat--;carry=0;for(i=FPP.precisionLength-1;i>=0;i--){carry+=FPP.result[o+i]+operand[i];FPP.result[o+i]=carry&FPPwordMask;carry=(carry>>>FPPwordBits)&FPPwordMask}}}number[o]=qhat}if(!(FPP.FPS&0x20)){qhat=~~(((FPP.result[o-1]*FPPwordBase+FPP.result[o])*FPPwordBase+FPP.result[o+1])/divisor);if(qhat>=FPPwordBase)qhat=FPPwordBase-1;if(qhat&0x8000){fppAddSmall(number,1)}}fppPack(number,numberExp,numberSign)}}}function fppMODF(number,whole,operand){"use strict";var i,j,carry,numberExp,operandExp,numberSign,position;numberExp=(number[0]&FPPexpMask)>>>FPPexpShift;operandExp=(operand[0]&FPPexpMask)>>>FPPexpShift;if(!operandExp||!numberExp){fppZero(number);fppTest(number);if(whole!=null){fppZero(whole)}}else{for(i=FPP.result.length-1;i>=0;i--){FPP.result[i]=0}numberSign=(number[0]^operand[0])&FPPsignMask;numberExp+=operandExp-FPPexpBias;number[0]=(number[0]&FPPfractionMask)|FPPhiddenMask;operand[0]=(operand[0]&FPPfractionMask)|FPPhiddenMask;for(i=FPP.precisionLength-1;i>=0;i--){carry=0;for(j=FPP.precisionLength-1;j>=0;j--){carry+=number[i]*operand[j]+FPP.result[i+j];FPP.result[i+j]=carry&FPPwordMask;carry=(carry>>>FPPwordBits)&FPPwordMask}if(carry){FPP.result[i+j]+=carry}}if(!(FPP.FPS&0x20)){position=numberExp-FPPexpBias;if(position<8){if(position<=0){position=((FPP.result[0]&0x8000)?0:1)}if(FPP.result[FPP.precisionLength-1]&(0x80>>>position)){fppAddSmall(FPP.result,0x100>>>position)}}}if(FPP.result[0]&0x8000){position=0}else{position=1}if(whole!=null){if(numberExp-position<=FPPexpBias){fppZero(whole)}else{fppCopyRightBits(whole,FPP.result,8-position,numberExp-FPPexpBias);fppPack(whole,numberExp-position,numberSign)}}if(numberExp-position>=0x100){fppZero(number);FPP.FPS=(FPP.FPS&0xfff0)|4|2}else{if(numberExp-position>FPPexpBias){position=fppFindNormal(FPP.result,numberExp-FPPexpBias)}if(position<0||position>=10+(FPP.precisionLength-1)*FPPwordBits){fppZero(number);fppTest(number);return}else{if(position!=8){if(position<8){fppCopyRightShift(number,FPP.result,8-position)}else{fppCopyShiftLeft(number,FPP.result,position-8)}}numberExp-=position}fppPack(number,numberExp,numberSign)}}}function fppLDCIF(number,addressMode){"use strict";var result,src,virtualAddress,numberSign,numberExp=FPPwordBits,length=2;result=0;if(!(addressMode&0x38)){src=CPU.registerVal[addressMode&7]<<FPPwordBits}else{if((FPP.FPS&0x40)&&(addressMode&0x3f)!=0x17){length=4}if((result=getVirtualByMode(addressMode,MMU_READ|length))>=0){virtualAddress=result;if((result=readWordByVirtual(virtualAddress))>=0){src=result<<FPPwordBits;if((FPP.FPS&0x40)&&(addressMode&0x3f)!=0x17){numberExp=32;virtualAddress=incrementVirtual(virtualAddress);if((result=readWordByVirtual(virtualAddress))>=0){src|=result}}}}}if(result>=0){fppZero(number);if(src==0){fppTest(number)}else{numberSign=0;if(src&0x80000000){src=0x80000000-(src&0x7fffffff);numberSign=FPPsignMask}if(!(src&0xff000000)){numberExp-=8;while(!(src&0xff800000)){src<<=1;numberExp--}number[0]=src>>>FPPwordBits;number[1]=src&FPPwordMask}else{while(!(src&0x80000000)){src<<=1;numberExp--}if(FPP.precisionLength==2&&!(FPP.FPS&0x20)){if(src&0x80){src=(src>>>1)+0x80;if(!(src&0x80000000)){src<<=1}}}number[0]=src>>>24;number[1]=(src>>>8)&FPPwordMask;number[2]=(src<<8)&FPPwordMask}fppPack(number,numberExp+FPPexpBias,numberSign)}}}function fppSTCFI(number,addressMode){"use strict";var result=0,words=1,shift,virtualAddress,status,condition=0;if((FPP.FPS&0x40)&&(addressMode&0x3f)!=0x17){words=2}shift=((number[0]&FPPexpMask)>>>FPPexpShift)-FPPexpBias;if(shift<=0){result=0;condition|=4}else{result=(((number[0]&FPPfractionMask)|FPPhiddenMask)<<24)|(number[1]<<8);if(FPP.precisionLength>2){result|=number[2]>>>8}shift=(words*FPPwordBits)-shift;if(shift>0){result>>>=shift;if(words==1){result&=0xffff0000}if(number[0]&FPPsignMask){result=(0x80000000-result)|0x80000000;condition|=8}}else{if(words==1){result&=0xffff0000}if(shift==0&&(number[0]&FPPsignMask)&&!(result&0xfffffff)){result=0x80000000;condition|=8}else{result=0;if(FPP.FPS&0x100){fppTrap(6)}condition|=4|1}}}if(!(addressMode&0x38)){CPU.registerVal[addressMode&7]=result>>>FPPwordBits;FPP.FPS=(FPP.FPS&0xfff0)|condition;fppFlags()}else{if((virtualAddress=getVirtualByMode(addressMode,MMU_WRITE|(words<<1)))>=0){if(((status=writeWordByVirtual(virtualAddress,(result>>>FPPwordBits)&FPPwordMask)))>=0){if(words>1){virtualAddress=incrementVirtual(virtualAddress);status=writeWordByVirtual(virtualAddress,result&FPPwordMask)}}if(status>=0){FPP.FPS=(FPP.FPS&0xfff0)|condition;fppFlags()}}}}function writeFloatByVirtual(virtualAddress,number){"use strict";var result,i;for(i=0;i<FPP.modeLength;i++){if((result=writeWordByVirtual(virtualAddress,number[i]))<0){break}virtualAddress=incrementVirtual(virtualAddress)}return result}function readFloatByVirtual(number,virtualAddress){"use strict";var result,i;for(i=0;i<FPP.modeLength;i++){if((result=readWordByVirtual(virtualAddress))<0){break}number[i]=result;virtualAddress=incrementVirtual(virtualAddress)}if(result>=0){while(i<FPP.precisionLength){number[i++]=0}}if(result>=0&&(number[0]&FPPsignMask)&&!(number[0]&FPPexpMask)){if(FPP.FPS&0x0800){if(fppTrap(12)<0){result=-2}}}return result}function getFloatVirtualByMode(addressMode){"use strict";if((addressMode&0x3f)==0x17){FPP.modeLength=1}else{FPP.modeLength=FPP.precisionLength}return getVirtualByMode(addressMode,(FPP.modeLength<<1))}function writeFloatByMode(addressMode,number){"use strict";var result;if(!(addressMode&0x38)){addressMode&=7;if(addressMode<6){fppCopy(FPP.AC[addressMode],number);result=0}else{result=fppTrap(2)}}else{if((result=getFloatVirtualByMode(addressMode))>=0){result=writeFloatByVirtual(result,number)}}return result}function readFloatByMode(number,addressMode){"use strict";var virtualAddress,result;if(!(addressMode&0x38)){addressMode&=7;if(addressMode<6){fppCopy(number,FPP.AC[addressMode]);CPU.modifyRegister=addressMode;result=0}else{result=fppTrap(2)}}else{if((virtualAddress=getFloatVirtualByMode(addressMode))<0){return virtualAddress}result=readFloatByVirtual(number,virtualAddress);CPU.modifyRegister=-1;CPU.modifyAddress=virtualAddress}return result}function modifyFloat(number){"use strict";if(CPU.modifyRegister>=0){fppCopy(FPP.AC[CPU.modifyRegister],number)}else{return writeFloatByVirtual(CPU.modifyAddress,number)}return 0}function executeFPP(instruction){"use strict";var AC,result,virtualAddress;FPP.backupPC=CPU.registerVal[7];AC=(instruction>>>6)&3;switch(instruction&0xf00){case 0:switch(AC){case 0:switch(instruction&0x3f){case 0:fppFlags();break;case 1:FPP.FPS&=0xff7f;FPP.precisionLength=2;break;case 2:FPP.FPS&=0xffbf;break;case 9:FPP.FPS|=0x80;FPP.precisionLength=4;break;case 10:FPP.FPS|=0x40;break;default:fppTrap(2);break}break;case 1:if((result=readWordByMode(instruction))>=0){FPP.FPS=result&0xcfff;if(!(FPP.FPS&0x80)){FPP.precisionLength=2}else{FPP.precisionLength=4}}break;case 2:writeWordByMode(instruction,FPP.FPS);break;case 3:if(!(instruction&0x38)){CPU.registerVal[instruction&7]=FPP.FEC}else{if((virtualAddress=getVirtualByMode(instruction,MMU_WRITE|4))>=0){if((result=writeWordByVirtual(virtualAddress,FPP.FEC))>=0){virtualAddress=incrementVirtual(virtualAddress);writeWordByVirtual(virtualAddress,FPP.FEA)}}}break}break;case 0x100:switch(AC){case 0:fppZero(FPP.scratch);if(writeFloatByMode(instruction,FPP.scratch)>=0){fppTest(FPP.scratch)}break;case 1:if(readFloatByMode(FPP.scratch,instruction)!=-1){fppTest(FPP.scratch)}break;case 2:if(readFloatByMode(FPP.scratch,instruction)!=-1){if(!(FPP.scratch[0]&FPPexpMask)){fppZero(FPP.scratch)}else{FPP.scratch[0]&=~FPPsignMask}if(modifyFloat(FPP.scratch)>=0){fppTest(FPP.scratch)}}break;case 3:if(readFloatByMode(FPP.scratch,instruction)!=-1){if(!(FPP.scratch[0]&FPPexpMask)){fppZero(FPP.scratch)}else{FPP.scratch[0]^=FPPsignMask}if(modifyFloat(FPP.scratch)>=0){fppTest(FPP.scratch)}}break}break;case 0x200:if(readFloatByMode(FPP.scratch,instruction)>=0){fppMultiply(FPP.AC[AC],FPP.scratch)}break;case 0x300:if(readFloatByMode(FPP.scratch,instruction)>=0){if(AC&1){fppMODF(FPP.AC[AC],null,FPP.scratch)}else{fppMODF(FPP.AC[AC],FPP.AC[AC+1],FPP.scratch)}}break;case 0x400:if(readFloatByMode(FPP.scratch,instruction)>=0){fppAdd(FPP.AC[AC],FPP.scratch)}break;case 0x500:if(readFloatByMode(FPP.AC[AC],instruction)>=0){fppTest(FPP.AC[AC])}break;case 0x600:if(readFloatByMode(FPP.scratch,instruction)>=0){FPP.scratch[0]^=FPPsignMask;fppAdd(FPP.AC[AC],FPP.scratch)}break;case 0x700:if(readFloatByMode(FPP.scratch,instruction)>=0){fppCompare(FPP.scratch,FPP.AC[AC])}break;case 0x800:writeFloatByMode(instruction,FPP.AC[AC]);break;case 0x900:if(readFloatByMode(FPP.scratch,instruction)>=0){fppDivide(FPP.AC[AC],FPP.scratch)}break;case 0xa00:result=((FPP.AC[AC][0]&FPPexpMask)>>>FPPexpShift)-FPPexpBias;if(writeWordByMode(instruction,result)>=0){fppTestInt(result);fppFlags()}break;case 0xb00:fppSTCFI(FPP.AC[AC],instruction);break;case 0xc00:result=1;fppCopy(FPP.scratch,FPP.AC[AC]);FPP.precisionLength=6-FPP.precisionLength;if(FPP.precisionLength==4){FPP.scratch[2]=FPP.scratch[3]=0}else{if(!(FPP.FPS&0x20)&&(FPP.scratch[2]&0x8000)){fppIncrement(FPP.scratch);result=0}}if((writeFloatByMode(instruction,FPP.scratch)>=0)&&result){fppTest(FPP.scratch)}FPP.precisionLength=6-FPP.precisionLength;break;case 0xd00:if((result=readWordByMode(instruction))>=0){fppLDEXP(FPP.AC[AC],result)}break;case 0xe00:fppLDCIF(FPP.AC[AC],instruction);break;case 0xf00:FPP.precisionLength=6-FPP.precisionLength;if(readFloatByMode(FPP.AC[AC],instruction)>=0){FPP.precisionLength=6-FPP.precisionLength;if(FPP.precisionLength==4){FPP.AC[AC][2]=FPP.AC[AC][3]=0;fppTest(FPP.AC[AC])}else{if(!(FPP.FPS&0x20)&&(FPP.AC[AC][2]&0x8000)){fppIncrement(FPP.AC[AC])}else{fppTest(FPP.AC[AC])}FPP.AC[AC][2]=FPP.AC[AC][3]=0}}else{FPP.precisionLength=6-FPP.precisionLength}break;default:fppTrap(2);break}}

